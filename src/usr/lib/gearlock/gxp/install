#!/bin/bash

# resolve conflicts
conflicts=
remove_list=
instsize=0
instfile=
for pkg in "$@"; do
	if [ -h "$GXP_DB/$pkg" ]; then
		real_conflict=$(readlink -f "$GXP_DB/$pkg")
		conflicts="$conflicts ${real_conflict##*/}"
	fi

	. "$GXP_CACHE/repo/$(pkg_version "$pkg" | cut -f 1)/$1"
	for subpkg in $PROVIDES; do
		if [ -d "$GXP_DB/$subpkg" ]; then
			conflicts="$conflicts $subpkg"
		fi
	done
	unset NAME VERSION DESC ARCH LICENSE AUTHOR URL PROVIDES DEPENDS FILEONHOST

	for subpkg in $conflicts; do
		depbreak=
		for installed in "$GXP_DB"/*/; do
			. "$installed/info"
			if echo "$DEPENDS" | grep -q "$subpkg"; then
				depbreak="$depbreak,$(basename "$installed")"
			fi
			unset NAME VERSION DESC ARCH LICENSE AUTHOR URL PROVIDES DEPENDS FILEONHOST
		done
		read -rn 1 -p "$pkg conflicts with $subpkg. Remove $subpkg? [Y/n]" confirm
		case "$confirm" in
		[Yy]) if [ "$depbreak" ]; then
			echo "Remove $subpkg breaks dependency of ${depbreak#,}"
			exit 1
		else
			remove_list="$remove_list $subpkg"
		fi ;;
		*) exit 1 ;;
		esac
	done

	pkgmax=$(pkg_version "$pkg")
	fetched=$("$GEARLIB"/gxp/fetch -s "$(echo "$pkgmax" | cut -f 1)" "$(echo "$pkgmax" | awk '{print $3}')") || exit 1

	"$GEARLIB"/checksum "${fetched}.sig" "$fetched" || exit 1

	instfile="$instfile $fetched"
	instsize=$((instsize + $("$GEARLIB"/decompsize "$fetched")))
done

if [ "$remove_list" ]; then
	remove $remove_list
fi

freespace=$("$GEARLIB"/checkfree)

((freespace < instsize)) && echo "Not enough space" && exit 1

echo
[ "$explicit" = true ] &&
	echo "Packages to be installed: $*" ||
	echo "Dependencies to be installed: $*"
echo "Total installed size: $((instsize / 1024))Mb"
read -rn 1 -p "Perform installation? [Y/n]" confirm
case "$confirm" in
[Yy]) ;;
*) exit 0 ;;
esac

for pkg in $instfile; do
	"$GEARLIB"/gxp/installfile "$pkg" || exit 1
done
