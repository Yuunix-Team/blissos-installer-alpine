#!/bin/sh

chrootdir=/gearlock

die() { echo "==> ERROR: $*" && exit 1; }

chroot_add_mount() { mount $@ && CHROOT_ACTIVE_MOUNTS="$2 $CHROOT_ACTIVE_MOUNTS"; }
chroot_if_dir() { [ -d "$1" ] && shift && chroot_add_mount $@ || true; }
chroot_teardown() { [ "$CHROOT_ACTIVE_MOUNTS" ] && umount $CHROOT_ACTIVE_MOUNTS && unset CHROOT_ACTIVE_MOUNTS; }

chroot_setup() {
	CHROOT_ACTIVE_MOUNTS=""
	trap 'chroot_teardown' EXIT

	chroot_add_mount proc "$1/proc" -t proc -o nosuid,noexec,nodev &&
		chroot_add_mount sys "$1/sys" -t sysfs -o nosuid,noexec,nodev,ro &&
		chroot_if_dir /sys/firmware/efi/efivars efivarfs "$1/sys/firmware/efi/efivars" -t efivarfs -o nosuid,noexec,nodev &&
		chroot_add_mount /dev "$1/dev" --bind &&
		chroot_add_mount /android/system "$1/system" --bind &&
		chroot_add_mount /android/data "$1/data" --bind &&
		chroot_add_mount /android/vendor "$1/vendor" --bind &&
		chroot_if_dir /android/apex /android/apex "$1/apex" --bind &&
		chroot_add_mount tmp "$1/tmp" -t tmpfs -o mode=1777,nodev,nosuid
}

# [ "$EUID" = "0" ] || die "This script must be ran with root. Please try again using 'su -c ${0##*/}'"

chroot_setup "$chrootdir" || die "Failed to setup chroot $chrootdir"

SHELL=/bin/sh chroot "$chrootdir" /bin/gshell -c $@
