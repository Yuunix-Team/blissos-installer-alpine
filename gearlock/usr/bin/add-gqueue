#!/bin/bash

# recovery task queueing
# syntax: add-gqueue <task> <task arguments/options>
# TODO: tasks: fsresize (non-btrfs/exfat only), runcmd, sysup, clean

# fsresize arguments: <device/image> <size>
# recommend doing this in recovery instead

# supported fs type list:
# extfs: resize2fs
# xfs: xfs_growfs
# fat: fatresize
# f2fs: resize.f2fs

# size: can be in K,M,G,...
# (as long as not greater than max (fill available space) or smaller than min)
# or min/max

# runcmd arguments: <command>

die() { echo "==> ERROR: $1" >&2 && exit "${2:-1}"; }

declare -A ORDERS=(["fsresize"]=0 ["sysup"]=1 ["runcmd"]=2 ["clean"]=3)

TASK=$1
case "$TASK" in
fsresize)
	# TODO: check filesystem availablity & size

	DISK=$2
	NEWSIZE=$3
	[ -e "$DISK" ] || die "Device '$DISK' not exist" 2

	case "$(blkol TYPE "$DISK")" in
	ext[234])
		diskinfo=($(dumpe2fs "$DISK" 2>/dev/null | grep -E '^(Free b|B)lock(s| count| size):' | awk -F":" '{print $2}'))
		MINSIZE=$(((diskinfo[0] - diskinfo[1]) * (diskinfo[2] / 1024)))
		;;
	*)
		disktmp="$(mktemp)"
		rm -f "$disktmp"
		mkdir -p "$disktmp" || true
		mount -o ro,force "$DISK" "$disktmp" 2>/dev/null ||
			die "Failed to check filesystem space availablity of '$DISK'" 3
		MINSIZE=$(df -k --sync --output=used "$disktmp")
		umount "$disktmp"
		;;
	esac

	((NEWSIZE < (MINSIZE + 4096))) &&
		die "Device '$DISK' doesn't have enough space to resize" 4

	;;
sysup) ;;
runcmd) ;;
clean) ;;
*) exit 1 ;;
esac

# rearange and pipe to /var/gearlock/queue.glist

# convert task to literal string
FULLCMD=""
for arg in "$@"; do FULLCMD+="'$arg' "; done

# load queue
declare -a CURRENT_QUEUE=()
[ -e "/var/gearlock/queue.glist" ] &&
	readarray -t CURRENT_QUEUE </var/gearlock/queue.glist

# insert queue by prior order
i=1
while [ "${CURRENT_QUEUE["$i"]}" ]; do
	qname=$(sed -r "s/^'([a-z]+)'.*/\1/g" <<<"${CURRENT_QUEUE["$i"]}")
	((${ORDERS["$qname"]} > ${ORDERS["$TASK"]})) &&
		break
	i=$((i + 1))
done
CURRENT_QUEUE=(
	"${CURRENT_QUEUE[@]:1:$i}"
	"$FULLCMD"
	"${CURRENT_QUEUE[@]:$i}"
)

# write to queue
echo >/var/gearlock/queue.glist
for queue in "${CURRENT_QUEUE[@]}"; do
	printf "%s\n" "$queue" >>/var/gearlock/queue.glist
done
